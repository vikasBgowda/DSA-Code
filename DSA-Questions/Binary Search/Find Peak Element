// we use graph method for this problem
3-condition 1-> if we are in increasing curve mid -> mid-1 (>) then we move to right part => start=mid+1
            2-> if we are in decreasing curve mid <- mid-1 (<) then we move to left part =end=mid-1;
            3-> if we are standing at the peak element i.e if ((mid>mid-1) && (mid>mid+1)) 


import java.util.ArrayList;
public class Solution {
    public static int findPeakElement(ArrayList<Integer> arr) {
        // Write your code here.

        int n=arr.size();
        if(n==1)return 0;
        if(arr.get(0)>arr.get(1))return 0;
        if(arr.get(n-1)>arr.get(n-2))return n-1;
        
        int start=1,end=n-2;
        while(start<=end){
            int mid=start+(end-start)/2;
            if((arr.get(mid)>arr.get(mid-1)) && (arr.get(mid)>arr.get(mid+1))){
                return mid;
            }
            if(arr.get(mid)>arr.get(mid-1)){
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return -1;

    }
};
