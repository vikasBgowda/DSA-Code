import java.util.ArrayList;
public class Solution {
    static int helper(ArrayList<Integer> a, ArrayList<Integer> b,int k){
        int n1=a.size();
        int n2=b.size();
        if(n1>n2) return helper(b, a,k);
        int n=n1+n2;
        int left=k;
        int l1=Integer.MIN_VALUE,l2=Integer.MIN_VALUE;
        int r1=Integer.MAX_VALUE,r2=Integer.MAX_VALUE;
        int low=Math.max(0,k-n2),high=Math.min(k,n1);
        while(low<=high){
            int mid1=(low+high) >> 1;
            int mid2=left-mid1;
            r1= (mid1<n1) ? a.get(mid1):Integer.MAX_VALUE;
            // if(mid1<n1) r1=a.get(mid1);
            r2=(mid2<n2) ?b.get(mid2):Integer.MAX_VALUE; 
            // if(mid2<n2) r2=b.get(mid2);
            l1=(mid1-1>=0) ? a.get(mid1-1):Integer.MIN_VALUE;
            // if(mid1-1>=0) l1=a.get(mid1-1);
            l2=(mid2-1>=0) ? b.get(mid2-1):Integer.MIN_VALUE;
            // if(mid2-1>=0) l2=b.get(mid2-1);

            if(l1<=r2 && l2<=r1){
                return Math.max(l1,l2);
            }
            else if(l1>l2){
                high=mid1-1;
            }else{
                low=mid1+1;
            }
        }
        return 0;
    }
    public static int kthElement(ArrayList<Integer> arr1, ArrayList<Integer> arr2, int n, int m, int k) {
        // Write your coder here
        return helper(arr1, arr2, k);
    }
}
