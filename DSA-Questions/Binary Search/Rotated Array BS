# Finding the target in the rotated array 

        # // check if mid==target
        # // 1 check if left part is sorted ?
        # //          if sorted then check if key is present in the left sorted part
        # // 2 check if right part is sorted
        # //          if sorted then check if key is present in the right part

class Solution {
    public int search(int[] nums, int target) {
        int start=0,end=nums.length-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(nums[mid]==target){
                return mid;
            }
            if(nums[start]<=nums[mid]){
                if(target>=nums[start] && target<=nums[mid]){
                    end=mid-1;
                }
                else{
                    start=mid+1;
                }
            }
            else if(nums[mid]<=nums[end]){
                if(target>=nums[mid] && target<=nums[end]){
                    start=mid+1;
                }
                else
                {
                    end=mid-1;
                }
            }
        }
        return -1;
    }
}
