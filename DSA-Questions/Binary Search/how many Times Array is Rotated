//It is similar to find the minimum element in a sorted array
// here also we are finding how many times the array is sorted == pivot element ==> minimum element in an array but we need to return index
// 1 -> Find which part is sorted take the min element in the sorted part and move to next part

public class Solution {
    public static int findKRotation(int []arr){
        // Write your code here.

        int n=arr.length, index=-1, ans=Integer.MAX_VALUE;
        int start=0,end=n-1;
        while(start<=end){
            int mid=start+(end-start)/2;

            if(arr[start]<=arr[mid]){
                if(arr[start]<ans){
                    ans=arr[start];
                    index=start;
                }
                start=mid+1;
            }else{
                if(arr[mid]<ans){
                    ans=arr[mid];
                    index=mid;
                }
                end=mid-1;
            }
        }
        return index;
    }
}
