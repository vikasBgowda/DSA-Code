
-Here we try to keep a formate of 
  Nos behind low is 0's
  Nos After high is 2's
  Nos between low and high is 1's

for(mid <= high)
  if(mid==0) swap(low,mid) low++,mid++
  if(mid==1) mid++
  if(mid==2) swap(mid,high) high--

class Solution {
    // Function to sort an array of 0s, 1s, and 2s
    public void sort012(int[] arr) {
        // code here
        int low=0,mid=0,high=arr.length-1;
        while(mid<=high){
            switch(arr[mid]){
                case 0:{
                    int temp=arr[low];
                    arr[low]=arr[mid];
                    arr[mid]=temp;
                    low++;
                    mid++;
                }
                break;
                case 1:{
                    mid++;
                }
                break;
                case 2:{
                    int temp=arr[high];
                    arr[high]=arr[mid];
                    arr[mid]=temp;
                    high--;
                }
                break;
                default:return;
            }
        }
    }
}
