// we are deleting the node in LL with the given key data
// we are doing everything inside a single while loop- delete head, delete middle , delete tail
// first if temp == k then first we check if its a head element then we move head and 
// for the edge case we check if nextNode and prevNode is not null then only we perform the link change
// since in head we dont have prevNode next and similarlly for tail we don't have nextNode prev 

public class Solution {
    public static Node deleteAllOccurrences(Node head, int k) {
        // Write your code here.
        Node temp=head;
        while(temp!=null){
            if(temp.data==k){
                if(head.data==k){
                    head=temp.next;
                }
                Node prevNode=temp.prev;
                Node nextNode=temp.next;
                if(prevNode!=null) prevNode.next=nextNode;
                if(nextNode!=null) nextNode.prev=prevNode;
            }
            temp=temp.next;
        }
        return head;
    }
}  
