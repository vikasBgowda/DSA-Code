// - we are using the mories travel to flatten the tree onto LL
--- we so to left node with the pointer prev if there exist a left node of curr and
-- we travel to the right most element of the left sub-tree and point the right node of left sub-tree to the curr=>right
and we make curr right as curr left and make curr left to null

class Solution {
    public void flatten(TreeNode root) {
        TreeNode curr=root;
        while(curr!=null){
            if(curr.left!=null){
                TreeNode prev=curr.left;
                while(prev.right!=null){
                    prev=prev.right;
                }
                prev.right=curr.right;
                curr.right=curr.left;
                curr.left=null;
            }
            curr=curr.right;
        }
    }
}
