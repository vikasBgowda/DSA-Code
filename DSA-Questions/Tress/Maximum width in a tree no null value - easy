// Here we are doing level order travel 
// once each level we are storing the size of that curr level and comparing with the max element which is greater
return max

class Solution {
    // Function to get the maximum width of a binary tree.
    int getMaxWidth(Node root) {
        // Your code here
        if(root==null){
            return 0;
        }
        Queue<Node>qq=new LinkedList<>();
        qq.add(root);
        int max=Integer.MIN_VALUE;
        while(!qq.isEmpty()){
            int size=qq.size();
            for(int i=0;i<size;i++){
                Node curr=qq.remove();
                if(curr.left!=null){
                    qq.add(curr.left);
                }
                if(curr.right!=null){
                    qq.add(curr.right);
                }
            }
            max=Math.max(max,size);
        }
        return max;
    }
}
